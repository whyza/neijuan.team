<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RequestBody注解接收实体对象时，部分属性为null的问题</title>
      <link href="/posts/Spring/22d70ab4.html"/>
      <url>/posts/Spring/22d70ab4.html</url>
      
        <content type="html"><![CDATA[<p>@RequestBody注解接收实体对象时，部分属性为null的问题</p><p><img src="http://whyzaa.oss-cn-shenzhen.aliyuncs.com/img/1.png" alt="1"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nStartFreeCoefficient 收不到值</span><br></pre></td></tr></table></figure><p>原因是lombok生成的getter、setter 如果一个字段第一个时小写，第二个是大写，那么就会导致接收不到</p><p>解决方法：</p><ul><li>nStartFreeCoefficient -&gt; noStartFreeCoefficient</li><li>是不是@Data注释、手写getter、setter方法</li></ul>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis持久化AOF和RDB</title>
      <link href="/posts/redis/9ca52021.html"/>
      <url>/posts/redis/9ca52021.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、AOF"><a href="#一、AOF" class="headerlink" title="一、AOF"></a>一、AOF</h2><p>三种写入策略：</p><h6 id="1-Always："><a href="#1-Always：" class="headerlink" title="1. Always："></a>1. Always：</h6><blockquote><p>执行redis写命令之后，立即执行写回磁盘，写入磁盘之后，才会返回结果，同步进行，会增加redis的响应延迟，如果此时磁盘io很繁忙，那么写如磁盘就会慢，那么redis 也会增加延迟时间。<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8a9e47cd91cd411a8eb792db24590833~tplv-k3u1fbpfcp-watermark.image"> </p></blockquote><h6 id="2-EverySecond"><a href="#2-EverySecond" class="headerlink" title="2. EverySecond"></a>2. EverySecond</h6><blockquote><p>相比于Always，Redis后台会又一个专门的线程每秒读取AOF日志缓冲区的命令，然后再写入磁盘。<br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db1c436a870a42aabab91440d00926f9~tplv-k3u1fbpfcp-watermark.image"></p></blockquote><h6 id="3-No"><a href="#3-No" class="headerlink" title="3. No"></a>3. No</h6><blockquote><p>Redis写入到内存成功后也会同时写入AOF缓冲区，但是此时Redis的后台线程不会执行写入磁盘的操作，而是由操作系统决定。何时存储到磁盘。<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/57566ee23cc64a07a7cf31c52eb96519~tplv-k3u1fbpfcp-watermark.image" alt="image"></p></blockquote><table><thead><tr><th>策略</th><th>何时写盘</th><th>优 点</th><th>缺 点</th></tr></thead><tbody><tr><td>Aways</td><td>同步写入</td><td>基本不丢失，增加延迟</td><td>io 忙的情况下，会增加线程返回结果的延迟时间，断电的时候会丢失还来的急写入的命令</td></tr><tr><td>EverySecond</td><td>每秒写入</td><td>性能好，不会增加太大延迟</td><td>断电会丢失一秒的数据</td></tr><tr><td>No</td><td>操作系统写入</td><td>性能好，不会增加太大延迟</td><td>丢失数据多少，由操作系统写磁盘频率决定</td></tr></tbody></table><h2 id="二、RDB（Redis-DataBase）"><a href="#二、RDB（Redis-DataBase）" class="headerlink" title="二、RDB（Redis DataBase）"></a>二、RDB（Redis DataBase）</h2><h5 id="AOF和RDB区别"><a href="#AOF和RDB区别" class="headerlink" title="AOF和RDB区别"></a>AOF和RDB区别</h5><h6 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h6><blockquote><p>RDB 文件是经过压缩的二进制文件，占用空间很小，也就是记录redis某一时刻的内存中的全部数据，将这个时刻的数据持久化到磁盘，实际有多少数据就存储多少。恢复速度很快。</p></blockquote><h5 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h5><blockquote><p>同样的Key如果操作多次日志中会有多条记录，而AOF会将这些记录都写到磁盘中</p></blockquote><h5 id="RDB缺点"><a href="#RDB缺点" class="headerlink" title="RDB缺点"></a>RDB缺点</h5><blockquote><p>因为RDB保存的是某一时刻的内存全部数据，我们在某个时刻生成RDB 文件，假设生成的时间是5s，那么在这之后的这段5s 内的内存数据，是不会参与保存的，造成数据丢失。</p></blockquote><h3 id="本文摘自：https-juejin-cn-post-6977280046553628709-https-juejin-cn-post-6978759015786348581"><a href="#本文摘自：https-juejin-cn-post-6977280046553628709-https-juejin-cn-post-6978759015786348581" class="headerlink" title="本文摘自：https://juejin.cn/post/6977280046553628709 / https://juejin.cn/post/6978759015786348581"></a>本文摘自：<a href="https://juejin.cn/post/6977280046553628709">https://juejin.cn/post/6977280046553628709</a> / <a href="https://juejin.cn/post/6978759015786348581">https://juejin.cn/post/6978759015786348581</a></h3>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring事务几种事务传播行为|记录一下</title>
      <link href="/posts/Spring/4ee824ff.html"/>
      <url>/posts/Spring/4ee824ff.html</url>
      
        <content type="html"><![CDATA[<h3 id="Spring事务几种事务传播行为"><a href="#Spring事务几种事务传播行为" class="headerlink" title="Spring事务几种事务传播行为"></a>Spring事务几种事务传播行为</h3><mark class="hl-label default">PROPAGATION_REQUIRED：</mark>  如果当前存在事务，则<mark class="hl-label blue">加入</mark> 该事务；如果当前没有事务，则<mark class="hl-label red">创建一个新的事务</mark> 。<br><mark class="hl-label default">PROPAGATION_SUPPORTS：</mark>  如果当前存在事务，则<mark class="hl-label blue">加入</mark> 该事务；如果当前没有事务，则<mark class="hl-label red">以非事务的方式继续运行</mark> 。<br><mark class="hl-label default">PROPAGATION_MANDATORY：</mark>  如果当前存在事务，则<mark class="hl-label blue">加入</mark> 该事务；如果当前没有事务，则<mark class="hl-label red">抛出异常</mark> 。<br><mark class="hl-label default">PROPAGATION_REQUIRES_NEW：</mark>  <mark class="hl-label blue">创建一个新的事务</mark> ，如果当前存在事务，则把当前事务<mark class="hl-label red">挂起</mark> 。<br><mark class="hl-label default">PROPAGATION_NOT_SUPPORTED：</mark>  <mark class="hl-label blue">以非事务方式运行</mark>  ，如果当前存在事务，则把当前事务<mark class="hl-label red">挂起</mark> 。<br><mark class="hl-label default">PROPAGATION_NEVER：</mark>   <mark class="hl-label blue">以非事务方式运行</mark> ，如果当前存在事务，则<mark class="hl-label red">抛出异常</mark> 。<br><mark class="hl-label default">PROPAGATION_NESTED：</mark>   如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于PROPAGATION_REQUIRED]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue本地开发环境配置跨域</title>
      <link href="/posts/Vue/a3c8d77a.html"/>
      <url>/posts/Vue/a3c8d77a.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域"></a>什么是跨域</h2><blockquote><p>跨域指浏览器不允许当前页面的所在的源去请求另一个源的数据。源指协议，端口，域名。只要这个3个中有一个不同就是跨域</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 协议跨域</span><br><span class="line">http://a.baidu.com 访问 https://a.baidu.com；</span><br><span class="line">2. 端口跨域</span><br><span class="line">http://a.baidu.com:8080 访问  http://a.baidu.com:8081；</span><br><span class="line">3. 域名跨域</span><br><span class="line">http://a.baidu.com 访问 http://b.baidu.com；</span><br></pre></td></tr></table></figure><h3 id="解决方案（vue）"><a href="#解决方案（vue）" class="headerlink" title="解决方案（vue）"></a>解决方案（vue）</h3><h4 id="proxyTable："><a href="#proxyTable：" class="headerlink" title="proxyTable："></a>proxyTable：</h4><p>&emsp; &emsp; 找到项目config目录下面的index.js文件；<br>&emsp; &emsp; 以豆瓣电影api为例，在proxyTable中添加如下代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;/mapi&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">target</span>: <span class="string">&#x27;https://api.douban.com/v2/movie/&#x27;</span>, <span class="comment">// api接口地址</span></span><br><span class="line">    <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">pathRewrite</span>: &#123; <span class="comment">// 路径重写，</span></span><br><span class="line">        <span class="string">&#x27;^/mapi&#x27;</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// 替换target中的请求地址，也就是说以后你在请求http://api.douban.com/v2/movie/的时候直接写成/mapi即可。</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onProxyReq</span>: <span class="function"><span class="keyword">function</span>(<span class="params">proxyReq, req, res</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;原路径：&quot;</span> + req.originalUrl, <span class="string">&quot;代理路径：&quot;</span> + req.path)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h3><h4 id="movie-js"><a href="#movie-js" class="headerlink" title="movie.js"></a>movie.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getMovieList</span>(<span class="params">url, params</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">        params</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">``</span></span><br><span class="line"><span class="string">`  </span></span><br><span class="line"><span class="string">------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#### douban.vue</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="string">``</span></span><br><span class="line">javascript</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    getMovieList</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@/api/movie&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;douban&quot;</span>,</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">moviedata</span>: <span class="literal">null</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">getMoive</span>: <span class="function"><span class="keyword">function</span>(<span class="params">start, count</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// /mapi/top250 --&gt; http://api.douban.com/v2/movie/top250</span></span><br><span class="line">            getMovieList(<span class="string">&quot;/mapi/top250&quot;</span>, &#123;</span><br><span class="line">                <span class="attr">start</span>: start,</span><br><span class="line">                <span class="attr">count</span>: count,</span><br><span class="line">                <span class="attr">apikey</span>: <span class="string">&quot;0df993c66c0c636e29ecbb5344252a4a&quot;</span></span><br><span class="line">            &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.moviedata = res.subjects;</span><br><span class="line">                <span class="built_in">console</span>.log(res.subjects)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h4 id="最后效果："><a href="#最后效果：" class="headerlink" title="最后效果："></a>最后效果：</h4><p>::: hljs-center</p><p><img src="https://https//whyza.github.io//usr/uploads/2019/10/3471224184.png" alt="1.png"></p><p>:::</p><p>::: hljs-center</p><p><img src="https://https//whyza.github.io//usr/uploads/2019/10/1957057929.png" alt="2.png"></p><p>:::</p><h3 id="补充一点："><a href="#补充一点：" class="headerlink" title="补充一点："></a>补充一点：</h3><p>&emsp; &emsp; 配置proxyTable的方式<strong>仅限于本地开发环境</strong>，nginx服务器配置跨域可以参考 ：<a href="https://https//whyza.github.io//web/51.html" title="nginx反向代理解决跨域">nginx反向代理解决跨域</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Avoid mutating a prop directly since the value will be overwritten whenever</title>
      <link href="/posts/Vue/8c084ee0.html"/>
      <url>/posts/Vue/8c084ee0.html</url>
      
        <content type="html"><![CDATA[<h3 id="vue报错："><a href="#vue报错：" class="headerlink" title="vue报错："></a>vue报错：</h3><p>Avoid mutating a prop directly since the value will be overwritten whenever</p><h4 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><a href="https://cn.vuejs.org/v2/guide/components-props.html#%E5%8D%95%E5%90%91%E6%95%B0%E6%8D%AE%E6%B5%81">官方文档</a></h4><pre><code>所有的 prop 都使得其父子 prop 之间形成了一个单向下行绑定：父级 prop 的更新会向下流动到子组件中，但是反过来则不行。</code></pre><h3 id="错误代码："><a href="#错误代码：" class="headerlink" title="错误代码："></a>错误代码：</h3><p>父组件：<br><img src="https://whyza.github.io/usr/uploads/2020/08/2075635265.png" alt="error3.png"><br>子组件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">cancelReply</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.parentId = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  <span class="built_in">this</span>.replyuserName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="built_in">this</span>.isReply = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>子组件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">cancelReply</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.$emit(<span class="string">&#x27;changereplyuserName&#x27;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="built_in">this</span>.$emit(<span class="string">&#x27;changeparentId&#x27;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">  <span class="built_in">this</span>.$emit(<span class="string">&#x27;changeisReply&#x27;</span>,<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>父组件：<br><img src="https://whyza.github.io/usr/uploads/2020/08/4276546712.png" alt="error4.png"></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决微信小程序setData() undefined问题</title>
      <link href="/posts/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/613539e7.html"/>
      <url>/posts/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/613539e7.html</url>
      
        <content type="html"><![CDATA[<h3 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">setleftSelectData:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  http.HttpRequst(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;setleftSelectData&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">userId</span>: app.globalData.userInfo.userId</span><br><span class="line">  &#125;, <span class="literal">false</span>, <span class="number">0</span>, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">      <span class="attr">leftSelectData</span>:res.data</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中的http.HttpRequest是封装好的请求方法，在该方法的回调中直接使用this.setData()会回报’setData’ of undefined，是因为这个this的指向并非是原来的this</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>以上述代码为例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">setleftSelectData:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">let</span> that = <span class="built_in">this</span>;</span><br><span class="line">   http.HttpRequst(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;setleftSelectData&quot;</span>, &#123;</span><br><span class="line">     <span class="attr">userId</span>: app.globalData.userInfo.userId</span><br><span class="line">   &#125;, <span class="literal">false</span>, <span class="number">0</span>, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">     that.setData(&#123;</span><br><span class="line">       <span class="attr">leftSelectData</span>:res.data</span><br><span class="line">     &#125;)</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mini-program </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java调用mysqldump备份数据库</title>
      <link href="/posts/mysqldump/6025797f.html"/>
      <url>/posts/mysqldump/6025797f.html</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: luis_liu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@DateTime</span>: 2021/6/29 9:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MysqlDumpMethod</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String dirName = <span class="string">&quot;文件夹name&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String userDir = System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String mysqldumpPath = <span class="string">&quot;mysqldump绝对路径&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String fileAbsPath = userDir + File.separator + dirName + File.separator;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String sysLineSeparator = System.getProperty(<span class="string">&quot;line.separator&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有符合条件需要导出的entity</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List&lt;JSONObject&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;JSONObject&gt; <span class="title">getAllExportEntity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * getExportDumpBat</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> allExportEntity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tenant</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getExportDumpBat</span><span class="params">(List&lt;JSONObject&gt; allExportEntity)</span> </span>&#123;</span><br><span class="line">        Runtime runtime = Runtime.getRuntime();</span><br><span class="line">        Process process = <span class="keyword">null</span>;</span><br><span class="line">        List&lt;File&gt; fileResultList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        StringBuilder sqlExportSb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        File dirFile = <span class="keyword">new</span> File(userDir + File.separator + dirName);</span><br><span class="line">        <span class="keyword">if</span> (!dirFile.exists()) &#123;</span><br><span class="line">            dirFile.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (JSONObject entity : allExportEntity) &#123;</span><br><span class="line">            JSONObject <span class="keyword">module</span> = entity.getJSONObject(<span class="string">&quot;module&quot;</span>);</span><br><span class="line">            String dbName = <span class="keyword">module</span>.getString(<span class="string">&quot;dbName&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotEmpty(dbName)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ymlData != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    sqlExportSb.append(isWinOs ? <span class="string">&quot;mysqldump&quot;</span> : mysqldumpPath);</span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; --extended-insert=false&quot;</span>); <span class="comment">// 解决生成的Sql文件只有一条insert语句</span></span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; -u&quot;</span>).append(user);</span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; -p&quot;</span>).append(password);</span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; -h&quot;</span>).append(host);</span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; -P&quot;</span>).append(port);</span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; --default-character-set=&quot;</span>).append(<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; --databases&quot;</span>);</span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; &quot;</span>).append(dbName);</span><br><span class="line">                    <span class="comment">// entityResult 导出的table名集合</span></span><br><span class="line">                    <span class="keyword">if</span> (!entityResult.isEmpty()) &#123;</span><br><span class="line">                        sqlExportSb.append(<span class="string">&quot; --tables &quot;</span>);</span><br><span class="line">                        <span class="keyword">for</span> (JSONObject entityRe : entityResult) &#123;</span><br><span class="line">                            sqlExportSb.append(entityRe.getString(<span class="string">&quot;tableName&quot;</span>)).append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line"><span class="comment">// where过滤数据</span></span><br><span class="line">                        sqlExportSb.append(<span class="string">&quot; --where &quot;</span>);</span><br><span class="line">                        sqlExportSb.append(<span class="string">&quot;\&quot;xxx=&#x27;&quot;</span>).append(tenant.getId()).append(<span class="string">&quot;&#x27;\&quot;&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    String filePath = fileAbsPath + dbName.replace(<span class="string">&quot; _ &quot;</span>, <span class="string">&quot; &quot;</span>) + <span class="string">&quot;.sql&quot;</span>;</span><br><span class="line">                    sqlExportSb.append(<span class="string">&quot; &gt; &quot;</span>).append(filePath);</span><br><span class="line">                    sqlExportSb.append(sysLineSeparator);</span><br><span class="line">                    fileResultList.add(<span class="keyword">new</span> File(filePath));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        File batFile = createBAT(sqlExportSb.toString(), <span class="string">&quot;sqlDataExport&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String canonicalPath = batFile.getCanonicalPath();</span><br><span class="line">            process = isWinOs ? runtime.exec(<span class="keyword">new</span> String[]&#123;<span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, canonicalPath&#125;) :</span><br><span class="line">                    runtime.exec(<span class="keyword">new</span> String[]&#123;<span class="string">&quot;/bin/bash&quot;</span>, canonicalPath&#125;);</span><br><span class="line">            <span class="keyword">new</span> ProcessClearStream(process.getInputStream(), <span class="string">&quot;INFO&quot;</span>).start();</span><br><span class="line">            <span class="keyword">new</span> ProcessClearStream(process.getErrorStream(), <span class="string">&quot;ERROR&quot;</span>).start();</span><br><span class="line">            <span class="keyword">boolean</span> isSuccess = process.waitFor(<span class="number">20</span>, TimeUnit.SECONDS);</span><br><span class="line">            System.out.println(<span class="string">&quot;finish run cmd-----------------------&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">                fileResultList.add(batFile);</span><br><span class="line">                fileResultList.add(sqlDataImportFile);</span><br><span class="line">                toZip(fileResultList, tenant);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> CommonException(<span class="string">&quot;错误&quot;</span>, <span class="string">&quot;响应超时，或执行失败&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> CommonException(<span class="string">&quot;错误&quot;</span>, e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != process) &#123;</span><br><span class="line">                process.destroy();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 压缩成zip</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sqlFiles</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tenant</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RuntimeException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">toZip</span><span class="params">(List&lt;File&gt; sqlFiles, Tenant tenant)</span> </span>&#123;</span><br><span class="line">        FileOutputStream fos1;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos1 = <span class="keyword">new</span> FileOutputStream(fileAbsPath + tenant.getCode() + <span class="string">&quot;-&quot;</span> + simpleDateFormat.format(<span class="keyword">new</span> Date()) + <span class="string">&quot;.zip&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> (ZipOutputStream zipOutputStream = <span class="keyword">new</span> ZipOutputStream(fos1)) &#123;</span><br><span class="line">                <span class="keyword">for</span> (File srcFile : sqlFiles) &#123;</span><br><span class="line">                    <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER_SIZE];</span><br><span class="line">                    zipOutputStream.putNextEntry(<span class="keyword">new</span> ZipEntry(srcFile.getName()));</span><br><span class="line">                    <span class="keyword">int</span> len;</span><br><span class="line">                    FileInputStream in = <span class="keyword">new</span> FileInputStream(srcFile);</span><br><span class="line">                    <span class="keyword">while</span> ((len = in.read(buf)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        zipOutputStream.write(buf, <span class="number">0</span>, len);</span><br><span class="line">                    &#125;</span><br><span class="line">                    zipOutputStream.closeEntry();</span><br><span class="line">                    in.close();</span><br><span class="line">                &#125;</span><br><span class="line">                deleteFile(sqlFiles);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> CommonException(<span class="string">&quot;错误&quot;</span>, e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> CommonException(<span class="string">&quot;错误&quot;</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sqlFiles</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteFile</span><span class="params">(List&lt;File&gt; sqlFiles)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (File file : sqlFiles) &#123;</span><br><span class="line">            <span class="comment">// 如果文件路径所对应的文件存在，并且是一个文件，则直接删除</span></span><br><span class="line">            <span class="keyword">if</span> (file.exists() &amp;&amp; file.isFile()) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    file.delete();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> CommonException(<span class="string">&quot;错误&quot;</span>, e.getMessage());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建bat文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> command</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> File <span class="title">createBAT</span><span class="params">(String command, String fileName)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(fileAbsPath + fileName + (isWinOs ? <span class="string">&quot;.bat&quot;</span> : <span class="string">&quot;.sh&quot;</span>));</span><br><span class="line">        <span class="keyword">try</span> (BufferedWriter writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(file))) &#123;</span><br><span class="line">            writer.write(command);</span><br><span class="line">            writer.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> CommonException(<span class="string">&quot;错误&quot;</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysqldump </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java mysqldump </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
